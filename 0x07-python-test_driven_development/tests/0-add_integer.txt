===============================
 Test my function add_integer
===============================

This library is very simple, since it only has one function called
``add_integer()``

``add_integer()`` returns the addition of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator

==================
Import my function
==================
    >>> add_integer = __import__('0-add_integer').add_integer

============================================================
Test: adds 2 integers 
============================================================
    >>> add_integer(2,3)
    5
    
============================================================
Test: add with a floatin values
============================================================
    >>> add_integer(2.0,4)
    6
    
============================================================
Test: try with a non int or float a    
============================================================
    >>> add_integer('hola', 2)
    Traceback (most recent call last):
    TypeError: a must be an integer
    
============================================================
Test: try with a non int or float b
============================================================
    >>> add_integer(2,'hola')
    Traceback (most recent call last):
    TypeError: b must be an integer
    
============================================================
Test: try with a boolen value 
============================================================
    >>> add_integer(False,2)
    Traceback (most recent call last):
    TypeError: a must be an integer
    
============================================================
Test: try with more than 2 argument
============================================================
    >>> add_integer(1,2,3)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
    
============================================================
Test: try with only one argument
============================================================
    >>> add_integer(2)
    100

============================================================
Test: no arguments
============================================================
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'
    
============================================================
Test: one argument as None    
============================================================
    >>> add_integer(1, None)
    Traceback (most recent call last):
    TypeError: b must be an integer
