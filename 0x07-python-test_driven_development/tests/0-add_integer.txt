========================================
0-add_integer.py Module
========================================

function that adds 2 integers
Returns an integer: the addition of a and b
Code implementation to import:

	>>> add_integer = __import__('0-add_integer').add_integer

========================================
Succes Cases: Two integers
========================================
	>>> add_integer(3, 5)
	8

	>>> add_integer(0, 5)
	5

	>>> add_integer(5, 0)
	5

	>>> add_integer(0, 0)
	0
	
	>>> add_integer(True, False)
	1

========================================
Succes Cases: Two floats
========================================
	>>> add_integer(3.0, 5.0)
	8

	>>> add_integer(0.0, 5.5)
	5

	>>> add_integer(5.0, 0.0)
	5

	>>> add_integer(0.0, 0.0)
	0

========================================
Succes Cases: One Integer & One Float
========================================
	>>> add_integer(3.0, 5)
	8

	>>> add_integer(0, 5.5)
	5

	>>> add_integer(5.0, 0)
	5

	>>> add_integer(0, 0.0)
	0

========================================
Succes Cases: Default value of (b = 98)
========================================
	>>> add_integer(3)
	101

	>>> add_integer(0)
	98

	>>> add_integer(3.0)
	101

	>>> add_integer(0.0)
	98

========================================
Succes Cases: Negative Numbers
========================================
	>>> add_integer(-98)
	0

	>>> add_integer(-10, -15)
	-25

	>>> add_integer(-10.0, -15)
	-25

	>>> add_integer(-10, -15.0)
	-25

========================================
Non Succes Cases: TypeError (a)
========================================
	>>> add_integer("Holberton", 4)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer([0], 4)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer("Holberton")
	Traceback (most recent call last):
	TypeError: a must be an integer
	
	>>> add_integer((0,), 4)
	Traceback (most recent call last):
	TypeError: a must be an integer
	
	>>> add_integer("Holberton", "School")
	Traceback (most recent call last):
	TypeError: a must be an integer

========================================
Non Succes Cases: TypeError (b)
========================================
	>>> add_integer(4, "Holberton")
	Traceback (most recent call last):
	TypeError: b must be an integer
	
	>>> add_integer(4,[4])
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer(0, (0,))
	Traceback (most recent call last):
	TypeError: b must be an integer

========================================
Non Succes Cases: None
========================================
	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer
